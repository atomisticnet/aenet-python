Examples
========

This page is not an exhaustive documentation of all functionality
provided by the ``aenet-python`` package, but rather shows a collection
of representative command-line examples.

Data acquisition with :doc:`tools/sconv`
----------------------------------------

*  Extract structures, energies, and atomic forces from VASP
   calculations.

   The following will extract the final atomic structure from a
   ``vasprun.xml`` file generated by VASP, for example, with a geometry
   optimization.  The total energy, lattice parameters, atomic coordinates
   and forces will be written out to a file named ``final_structure.xsf`` in Ã¦net's XSF
   format.

.. sourcecode:: console

   $ aenet sconv vasprun.xml final_structure.xsf

*  Extract all structures, their energies and atomic forces from VASP
   calculations.  This will generate a series of XSF file named
   ``frame-<i>.xsf`` for each *ionic* iteration of the VASP calculation.

.. sourcecode:: console

   $ aenet sconv --split vasprun.xml frame.xsf

*  The same also works with output generated by Quantum Espresso's
   ``pw.x`` and FHI-aims.  Since the output files have no unique names,
   the *input format* needs to be specified using the ``-i`` flag.

.. sourcecode:: console

   $ aenet sconv -i pw pw.out final_structure.xsf
   $ aenet sconv -i aimsout aims.out final_structure.xsf

.. note::

   ``aenet sconv --formats`` prints out a complete list of supported
   file formats.

Structure conversion and manipulation
-------------------------------------

* Interconversion between the various supported file formats is
  straightforward with :doc:`tools/sconv`.  If the format of the input
  and/or output file is not uniquely defined by the file name, the
  formats must be specified using the flags ``-i`` and ``-o``.  Here a
  few examples:

.. sourcecode:: console

   $ # convert VASP POSCAR to XSF format
   $ aenet sconv POSCAR structure.xsf
   $ # conversion to LAMMPS dump
   $ aenet sconv structure.xsf structure.dump
   $ # protein database format
   $ aenet sconv structure.dump structure.pdb

* :doc:`tools/sconv` can also manipulate atomic structures.  If no
  output file name is specified, the output will be printed to the
  terminal (i.e., to *standard out*).  Here just a few examples:

.. sourcecode:: console

   $ # shift unit cell such that atom 10 is on the origin
   $ aenet sconv structure.xsf -o vasp --shift origin 10
   $ # scale the atomic structure uniformly by a factor of 1.1
   $ aenet sconv structure.xsf -o vasp --scale 1.1
   $ # rotate the structure by 45 degrees around the z axis
   $ aenet sconv structure.xyz -o vasp --rotate-angle 3 45

* Multiple instructions can be piped (if supported by the shell).  In
  that case, the input file is replaced by a hyphen (``-``), and the
  input format needs to be defined:

.. sourcecode:: bash

   $ aenet sconv structure.xsf -o vasp --shift origin 10 \
     | aenet sconv - -i vasp -o vasp --scale 1.1 \
     | aenet sconv - -i vasp -o vasp --rotate-angle 3 45

Featurize Structures
-----------------------

* Generate the atomic features and structural features from ``XSF`` files.
  Examples can be found in the Jupyter notebook `Featurize structures using
  aenet from Python <https://github.com/atomisticnet/aenet-python/tree/master/notebooks>`_.

